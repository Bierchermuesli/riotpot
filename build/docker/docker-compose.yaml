# This Docker Compose file is meant to be used on a development environment for testing.
# This environment includes a fake local network, a local database and
# a volume mounted with the code to see changes on the go.

# Base configuration for any protocol container
# Use this on each protocol so share a similar configuration to riotpot
x-protocol:
  &protocol
  profiles:
    - protocol
  depends_on:
    - riotpot
  networks:
    honeypot:

services:

  ##########################################
  # REQUIRED
  ##########################################

  # Tcpdump host that stores all the stuff that happens
  # in the network
  tcpdump:
    image: kaazing/tcpdump
    container_name: tcpdump
    network_mode: "host"
    volumes:
      - ${PWD:-../..}/tcpdump:/tcpdump
    # Run tcdump in autorotating mode, with gzip compression
    # The files will be rotated every 24h or 500MB and named
    # after the timestamp when the file is created.
    command: [
      "-z", "gzip", # compress to gzip
      "-G", "86400", # 24h in seconds
      "-C", "500", # maximum file size
      "-W", "10", # ignored, only affects the name
      "-v", # verbose
      "-i", "any", # any interface
      "-w", "tcpdump/trace_%Y_%m_%d_%H_%M_%S.pcap" # trace_<timestamp>.pcap
    ]


  # RIoTPot application
  riotpot:
    container_name: riotpot
    build:
      context: ${PWD:-../..}/
      dockerfile: build/docker/Dockerfile
    restart: always # restart riotpot when it crashes
    ports:
      # Ports under 60 might see errors when unquoted
      # https://stackoverflow.com/questions/58810789/quotes-on-docker-compose-yml-ports-make-any-difference
      - "7:7"       # Echo
      - "21:21"     # FTP
      - "22:22"     # SSH
      - "23:23"     # Telnet
      - "80:80"     # HTTP
      - "443:443"   # HTTPS
      - "502:502"   # Modbus
      - "1900:1900" # UPnP
      - "1883:1883" # MQTT
      - "5683:5683" # CoAP

      # Required for the REST API
      # Note: only available to localhost
      - "0.0.0.0:2022:2022"
    environment:
      - API_HOST=0.0.0.0
    networks:
      honeypot:
      default:

  ##########################################
  # PROTOCOLS
  ##########################################
  # Use the profile `protocol` to mount the image but do not start it
  # riotpot will deetermine which containers to start at a later time

  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    expose:
      - "1883"
    <<: *protocol

  http:
    build:
      context: ./service/custom_httpd
    container_name: http
    ports:
      - "80:80"
      - "443:443"
    networks:
      honeypot:


  ftp:
    build:
      context: ./service/custom_ftpd
      dockerfile: Dockerfile
    container_name: ftp
    restart: always
    ports:
      - "21:21"
      - "21000-21010:21000-21010"
    environment:
      # Passive mode ports range
      - MIN_PORT=21000
      - MAX_PORT=21010
      - USERS=${USERS}
    volumes:
      - ./ftp_data:/ftp/ftpuser:Z
    networks:
      honeypot:

  ssh:
    build:
      context: ./service/custom_sshd
      dockerfile: Dockerfile
    container_name: ssh
    restart: always
    ports:
      - "22:22"
    secrets:
      - ssh_users
    networks:
      honeypot:

  telnet:
    build:
      context: ./service/custom_telnet
      dockerfile: Dockerfile
    container_name: telnet
    restart: always
    ports:
      - "23:23"
    networks:
      honeypot:

  modbus:
    image: oitc/modbus-server
    container_name: modbus
    expose:
      - "502"
    <<: *protocol

  ocpp:
    image: ldonini/ocpp1.6-central-system # v1.6
    container_name: ocpp
    expose:
      - "443"
    <<: *protocol

secrets:
  ssh_users:
    file: ./service/custom_sshd/ssh_users.txt

networks:
  honeypot:
  ui: